name: Build and deploy action
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      # Копируем код из репозитория в runner
      - name: clone code
        uses: actions/checkout@v2
      # Собираем
      - name: docker build
        run: docker build -t ${{ secrets.DOCKER_HUB_USER }}/todoist:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      # Логинимся в докер
      - name: docker login
        run: echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USER }} --password-stdin
      # Пушим репозиторий
      - name: docker push
        run: docker push ${{ secrets.DOCKER_HUB_USER }}/todoist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      # Здесь мы в секретах гитхаба добавили еще два секрета DB_PASSWORD и DB_NAME
      # и пробросили их в переменные окружения
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
    steps:
      # Конфигурация
      - name: clone code
        uses: actions/checkout@v2
      - name: render configs
        run: |
          mkdir deploy
          cat docker-compose_ci.yaml | envsubst > deploy/docker-compose.yaml
      # Загрузка файлов на сервер
      - name: clone files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          # Указываем, какие файлы копировать
          source: "deploy/docker-compose.yaml" #,deploy/docker_config.py"
          # Место на виртуальной машине, куда скопируются файлы
          target: "code"
          strip_components: 1
      - name: clone files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "nginx.conf"
          target: "code"
      # Запуск приложения через GitHub Actions
      - name: run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          # Переходим в директорию и запускаем через sudo команду docker-compose up
          script: |
            cd code
            docker-compose up -d --force-recreate
#            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d --force-recreate