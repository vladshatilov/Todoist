version: '3.8'

x-env_in_app: &env-fields
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_NAME: ${POSTGRES_NAME}
  SOCIAL_AUTH_VK_OAUTH2_KEY: ${SOCIAL_AUTH_VK_OAUTH2_KEY}
  SOCIAL_AUTH_VK_OAUTH2_SECRET: ${SOCIAL_AUTH_VK_OAUTH2_SECRET}
  SECRET_KEY: ${SECRET_KEY}
  DB_HOST: db
  DEBUG: 1

services:
  db:
    image: postgres:12.4-alpine
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U todopostgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data_todo2:/var/lib/postgresql/data
    environment:
      <<: *env-fields
    restart: unless-stopped
#    ports:
#    - "5432:5432"
  api:
    image: vladshatilov/todoist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
#    ports:
#      - "8000:8000"
    environment:
      <<: *env-fields
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
#        condition: service_started
  frontend:
#    image: sermalenk/skypro-front:base
    image: sermalenk/skypro-front:lesson_36
    volumes:
      - type: bind
        source: ./nginx.conf
        target: /etc/nginx/conf.d/default.conf
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "80:80"
  migrations:
    image: vladshatilov/todoist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      db:
        condition: service_healthy
    environment:
      <<: *env-fields
    command: >
      /bin/sh -c "python manage.py migrate
      && python manage.py loadall"

volumes:
  postgres_data_todo2: